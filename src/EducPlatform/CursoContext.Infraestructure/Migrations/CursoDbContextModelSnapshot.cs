// <auto-generated />
using System;
using CursoContext.Infrastructure.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CursoContext.Infrastructure.Migrations
{
    [DbContext(typeof(CursoDbContext))]
    partial class CursoDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.5");

            modelBuilder.Entity("CursoContext.Domain.Aggregates.Curso", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("BLOB");

                    b.Property<string>("UsuarioAtualizacao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UsuarioCriacao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Cursos", (string)null);
                });

            modelBuilder.Entity("CursoContext.Domain.Entities.Aula", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Conteudo")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("CursoId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("BLOB");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("UsuarioAtualizacao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UsuarioCriacao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CursoId");

                    b.ToTable("Aulas", (string)null);
                });

            modelBuilder.Entity("CursoContext.Domain.Aggregates.Curso", b =>
                {
                    b.OwnsOne("CursoContext.Domain.ValueObjects.ConteudoProgramatico", "Conteudo", b1 =>
                        {
                            b1.Property<Guid>("CursoId")
                                .HasColumnType("TEXT");

                            b1.Property<string>("Descricao")
                                .IsRequired()
                                .HasMaxLength(1000)
                                .HasColumnType("TEXT")
                                .HasColumnName("ConteudoDescricao");

                            b1.Property<string>("Objetivos")
                                .IsRequired()
                                .HasMaxLength(1000)
                                .HasColumnType("TEXT")
                                .HasColumnName("ConteudoObjetivos");

                            b1.HasKey("CursoId");

                            b1.ToTable("Cursos");

                            b1.WithOwner()
                                .HasForeignKey("CursoId");
                        });

                    b.Navigation("Conteudo");
                });

            modelBuilder.Entity("CursoContext.Domain.Entities.Aula", b =>
                {
                    b.HasOne("CursoContext.Domain.Aggregates.Curso", null)
                        .WithMany("Aulas")
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CursoContext.Domain.Aggregates.Curso", b =>
                {
                    b.Navigation("Aulas");
                });
#pragma warning restore 612, 618
        }
    }
}
